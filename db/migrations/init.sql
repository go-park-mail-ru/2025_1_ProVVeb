CREATE TABLE COMPLAINT_TYPES (
    comp_type BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    type_description TEXT NOT NULL CHECK (LENGTH(type_description) <= 255)
);

CREATE TABLE NOTIFICATION_TYPES (
    notif_type BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    type_description TEXT NOT NULL CHECK (LENGTH(type_description) <= 255)
);

CREATE TABLE LOCATIONS (
    location_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    country TEXT NOT NULL CHECK (LENGTH(country) <= 255),
    city TEXT NOT NULL CHECK (LENGTH(city) <= 255),
    district TEXT NOT NULL CHECK (LENGTH(district) <= 255)
);

CREATE TABLE STATIC (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    path TEXT NOT NULL CHECK (LENGTH(path) <= 255) DEFAULT '/default.png',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE SUBSCRIPTION_TYPES (
    sub_type BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    type_description TEXT NOT NULL CHECK (LENGTH(type_description) <= 255)
);

CREATE TABLE PROFILES (
    profile_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    firstname TEXT NOT NULL CHECK (LENGTH(firstname) <= 255),
    lastname TEXT NOT NULL CHECK (LENGTH(lastname) <= 255),
    isMale BOOLEAN NOT NULL,
    birthday DATE NOT NULL,
    description TEXT,
    photo_id BIGINT,
    location_id BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (photo_id) REFERENCES STATIC(id) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (location_id) REFERENCES LOCATIONS(location_id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE USERS (
    user_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    profile_id BIGINT,
    status INT NOT NULL,
    login TEXT UNIQUE NOT NULL CHECK (LENGTH(login) <= 255),
    email TEXT UNIQUE NOT NULL CHECK (LENGTH(email) <= 255) 
        CHECK (email ~* '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'), 
    phone TEXT UNIQUE CHECK (LENGTH(phone) <= 20),
    password TEXT NOT NULL CHECK (LENGTH(password) >= 8 AND LENGTH(password) <= 255), 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE SESSIONS (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    token TEXT NOT NULL CHECK (LENGTH(token) <= 255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE INTERESTS (
    interest_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PROFILE_INTERESTS (
    profile_id BIGINT NOT NULL,
    interest_id BIGINT NOT NULL,
    PRIMARY KEY (profile_id, interest_id),
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (interest_id) REFERENCES INTERESTS(interest_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PREFERENCES (
    preference_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    preference_type INT NOT NULL,
    value TEXT NOT NULL CHECK (LENGTH(value) <= 255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PROFILE_PREFERENCES (
    profile_id BIGINT NOT NULL,
    preference_id BIGINT NOT NULL,
    PRIMARY KEY (profile_id, preference_id),
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (preference_id) REFERENCES PREFERENCES(preference_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MESSAGES (
    message_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    sender_profile_id BIGINT NOT NULL,
    receiver_profile_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    status INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (receiver_profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE LIKES (
    like_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    profile_id BIGINT NOT NULL,
    matched_profile_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status INT NOT NULL,
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (matched_profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MATCHES (
    match_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    profile_id BIGINT NOT NULL,
    matched_profile_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (matched_profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE SUBSCRIPTIONS (
    sub_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    sub_type BIGINT NOT NULL,
    transaction_data TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (sub_type) REFERENCES SUBSCRIPTION_TYPES(sub_type) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COMPLAINTS (
    complaint_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    complaint_by BIGINT NOT NULL,
    complaint_on BIGINT NOT NULL,
    complaint_type BIGINT NOT NULL,
    complaint_text TEXT NOT NULL,
    status INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    closed_at TIMESTAMP,
    FOREIGN KEY (complaint_by) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (complaint_on) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (complaint_type) REFERENCES COMPLAINT_TYPES(comp_type) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BLACKLIST (
    block_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE NOTIFICATIONS (
    notification_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    notification_type BIGINT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    read_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (notification_type) REFERENCES NOTIFICATION_TYPES(notif_type) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PROFILE_RATINGS (
    rating_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    profile_id BIGINT NOT NULL,
    rated_profile_id BIGINT NOT NULL,
    rating_score INT NOT NULL,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (rated_profile_id) REFERENCES PROFILES(profile_id) ON DELETE CASCADE ON UPDATE CASCADE
);
