services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Grey31415
      POSTGRES_DB: dev
    ports:
      - "8020:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dev"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "8010:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 10
    restart: always

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./backend:/app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432  # Внутренний порт контейнера PostgreSQL
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Grey31415
      POSTGRES_DB: dev
      POSTGRES_SSLMODE: disable
      REDIS_ADDR: redis:6379  # Внутренний порт контейнера Redis
      REDIS_DB: 0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
